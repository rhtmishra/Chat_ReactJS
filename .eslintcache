[{"C:\\Users\\rhtmi\\Desktop\\React-Projects\\chat_application-main\\src\\index.js":"1","C:\\Users\\rhtmi\\Desktop\\React-Projects\\chat_application-main\\src\\App.js":"2","C:\\Users\\rhtmi\\Desktop\\React-Projects\\chat_application-main\\src\\components\\ChatFeed.jsx":"3","C:\\Users\\rhtmi\\Desktop\\React-Projects\\chat_application-main\\src\\components\\LoginForm.jsx":"4","C:\\Users\\rhtmi\\Desktop\\React-Projects\\chat_application-main\\src\\components\\TheirMessage.jsx":"5","C:\\Users\\rhtmi\\Desktop\\React-Projects\\chat_application-main\\src\\components\\MyMessage.jsx":"6","C:\\Users\\rhtmi\\Desktop\\React-Projects\\chat_application-main\\src\\components\\MessageForm.jsx":"7"},{"size":147,"mtime":1635680859453,"results":"8","hashOfConfig":"9"},{"size":746,"mtime":1635681864256,"results":"10","hashOfConfig":"9"},{"size":2007,"mtime":1636109710091,"results":"11","hashOfConfig":"9"},{"size":1491,"mtime":1635682289121,"results":"12","hashOfConfig":"9"},{"size":958,"mtime":1635680859716,"results":"13","hashOfConfig":"9"},{"size":489,"mtime":1635680859662,"results":"14","hashOfConfig":"9"},{"size":1447,"mtime":1635680859612,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"7zoh1l",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"18"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"C:\\Users\\rhtmi\\Desktop\\React-Projects\\chat_application-main\\src\\index.js",[],["33","34","35","36","37","38"],"C:\\Users\\rhtmi\\Desktop\\React-Projects\\chat_application-main\\src\\App.js",[],"C:\\Users\\rhtmi\\Desktop\\React-Projects\\chat_application-main\\src\\components\\ChatFeed.jsx",["39"],"import MyMessage from './MyMessage';\nimport TheirMessage from './TheirMessage';\nimport MessageForm from './MessageForm';\n\nconst ChatFeed = (props) => {\n  console.log(props);\n  const { chats, activeChat, userName, messages } = props;\n\n  const chat = chats && chats[activeChat];\n\n  const renderReadReceipts = (message, isMyMessage) => chat.people.map((person, index) => person.last_read === message.id && (\n    <div\n      key={`read_${index}`}\n      className=\"read-receipt\"\n      style={{\n        float: isMyMessage ? 'right' : 'left',\n        backgroundImage: person.person.avatar && `url(${person.person.avatar})`,\n      }}\n    />\n  ));\n\n  const renderMessages = () => {\n    const keys = Object.keys(messages);\n\n    return keys.map((key, index) => {\n      const message = messages[key];\n      const lastMessageKey = index === 0 ? null : keys[index - 1];\n      const isMyMessage = userName === message.sender.username;\n\n      return (\n        <div key={`msg_${index}`} style={{ width: '100%' }}>\n          <div className=\"message-block\">\n            {isMyMessage\n              ? <MyMessage message={message} />\n              : <TheirMessage message={message} lastMessage={messages[lastMessageKey]} />}\n          </div>\n          <div className=\"read-receipts\" style={{ marginRight: isMyMessage ? '18px' : '0px', marginLeft: isMyMessage ? '0px' : '68px' }}>\n            {renderReadReceipts(message, isMyMessage)}\n          </div>\n        </div>\n      );\n    });\n  };\n\n  if (!chat) return <div />;\n\n  return (\n    <div className=\"chat-feed\">\n      <div className=\"chat-title-container\">\n        <div className=\"chat-title\">{chat?.title}</div>\n        <div className=\"chat-subtitle\">\n          {chat.people.map((person) => ` ${person.person.username}`)}\n        </div>\n      </div>\n      {renderMessages()}\n      <div style={{ height: '100px' }} />\n      <div className=\"message-form-container\">\n        <MessageForm {...props} chatId={activeChat} />\n      </div>\n    </div>\n  );\n};\n\nexport default ChatFeed;\n\n","C:\\Users\\rhtmi\\Desktop\\React-Projects\\chat_application-main\\src\\components\\LoginForm.jsx",[],"C:\\Users\\rhtmi\\Desktop\\React-Projects\\chat_application-main\\src\\components\\TheirMessage.jsx",[],"C:\\Users\\rhtmi\\Desktop\\React-Projects\\chat_application-main\\src\\components\\MyMessage.jsx",[],"C:\\Users\\rhtmi\\Desktop\\React-Projects\\chat_application-main\\src\\components\\MessageForm.jsx",[],["40","41","42","43","44","45"],{"ruleId":"46","replacedBy":"47"},{"ruleId":"48","replacedBy":"49"},{"ruleId":"50","replacedBy":"51"},{"ruleId":"52","replacedBy":"53"},{"ruleId":"54","replacedBy":"55"},{"ruleId":"56","replacedBy":"57"},{"ruleId":"58","severity":1,"message":"59","line":6,"column":3,"nodeType":"60","messageId":"61","endLine":6,"endColumn":14},{"ruleId":"46","replacedBy":"62"},{"ruleId":"48","replacedBy":"63"},{"ruleId":"50","replacedBy":"64"},{"ruleId":"52","replacedBy":"65"},{"ruleId":"54","replacedBy":"66"},{"ruleId":"56","replacedBy":"67"},"lines-around-directive",["68"],"no-spaced-func",["69"],"global-require",[],"no-buffer-constructor",[],"no-new-require",[],"no-path-concat",[],"no-console","Unexpected console statement.","MemberExpression","unexpected",["68"],["69"],[],[],[],[],"padding-line-between-statements","func-call-spacing"]